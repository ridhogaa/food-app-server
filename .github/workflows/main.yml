name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: db_food
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready --host=localhost --port=5432 --username=postgres --password=1234; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Build with Maven
        run: mvn clean install
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/db_food
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: 1234

      - name: Run tests
        run: mvn test
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/db_food
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: 1234

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready --host=localhost --port=5432 --username=postgres --password=1234; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Build with Maven
        run: mvn clean install
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/db_food
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: 1234

      - name: Run tests
        run: mvn test
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/db_food
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: 1234

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy files to remote server
        run: |
          scp -o StrictHostKeyChecking=no -r target/your-app.jar your-user@your-server-ip:/path/to/deployment/

      - name: Start application on remote server
        run: |
          ssh -o StrictHostKeyChecking=no your-user@your-server-ip 'bash -s' <<'ENDSSH'
          pkill -f 'java -jar' || true
          nohup java -jar /path/to/deployment/your-app.jar > app.log 2>&1 &
          ENDSSH

      - name: Download ngrok
        run: curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list && sudo apt update && sudo apt install ngrok

      - name: Start ngrok tunnel
        run: ngrok http 8080 --authtoken ${{ secrets.NGROK_AUTHTOKEN }} --log=stdout --log-format logfmt &
        env:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
